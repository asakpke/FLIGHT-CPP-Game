#include <iostream.h>
#include <conio.h>
#include <graphics.h>
#include <dos.h>
#include <stdio.h>
#include <alloc.h>
#include <stdlib.h>
#include <time.h>

class box
	{
	public:
		int x1,y1,px1,py1,x2,y2,n,status,speed,color, score;
		unsigned int area;
		char *buff;

		void init( int, int, int, int, int=RED );
		void draw();
		void put_image();
		int check( box );

	};

class aero_plane
	{
	public:
		int x1,y1,px1,py1,x2,y2,n,status,speed,color;
		unsigned int area;
		char *buff;

		aero_plane( int, int, int, int, int=RED );
		void draw();
		int check( box );

	};
void music(int);

void main()
	{
	int gd, gm,mx,my, lv;
	char d;

	gd = DETECT;
	initgraph(& gd, & gm, "c:\\tc\\bgi");
	void mainscreen();
	void bkscreen();
	void st1screen();
	void stscreen();

	void endscreen();
	mx =getmaxx();
	my = getmaxy();
//draw s2

	mainscreen();

	music(1);

	delay(1000);
	cleardevice();
	//draw name

	bkscreen();
	music(2);
	delay(1000);
	cleardevice();

	//draw stage1
	st1screen();

	delay(1000);

	cleardevice();

	setbkcolor(13);

	aero_plane a( 251, 448, 261, 468);


	const int max_box = 8;
	box b[max_box];

	char isDraw;
	int v;
	for( lv=0; lv < max_box; lv++ )
		{
		isDraw = 'y';
		b[lv].x1 = random(mx-21);
		b[lv].y1 = random(my-41);
		while( b[lv].y1 < 20 || b[lv].y1 > my/3 )
			b[lv].y1 = random(my);

		//ruff work start --- but now it is very imp work
		// it checks a box is not drown on a already drawn box.
		// if it is then it don't allows to draw box but give
		// him a another try to get new value and try again.
		for( v=0; v < lv; v++)
		{
		  if( b[lv].check( b[v] ) )
		  {
		     lv--;
		     isDraw = 'n';
		     break;
		     ;
		  }
		}
		//ruff work end
		if( isDraw != 'n' )
		   b[lv].init( b[lv].x1, b[lv].y1, b[lv].x1+20, b[lv].y1+41, lv+1);
		}

	rectangle(0,0,638,my);
	rectangle(0,0,mx,20);
	int score=0;
	char sco[10];

	itoa(score,sco,10);
	outtextxy(2,5,"Score = ");
	outtextxy( 70, 5, sco);
	rectangle(0,0,mx,20);
	outtextxy( 100,5,",Pause = Press Any Key");
	outtextxy( 275, 5, ",Exit = Esc");
	outtextxy( 365, 5, ",Keys = Home, End, Page Up/Down");

	delay(2000);

	do
		{
		if( kbhit() )
			{
			a.px1 =a.x1;
			a.py1 = a.y1;
			d = getch();
			d = getch();
			switch( d )
				{ //switch
				case 75: // left
					if( a.x1 > 1 )
						{
						a.x1 -= 15;
						a.draw();
						}
					break;
				case 77: // right
					if( a.x1 < 621 )
						{
						a.x1 += 15;
						a.draw();
						}
					break;
				case 72:      // up
					if( a.y1 > my/2+my/4 )
						{
						a.y1 -= 15;
						a.draw();
						}
					break;
				case 80:    //down
					if( a.y1 < my-25 )
						{
						a.y1 += 15;
						a.draw();
						}
					break;
				case 71: //home
					a.x1 = 1;
					a.draw();
					break;
				case 79: //end
					a.x1 = 621;
					a.draw();
					break;
				case 73://page-up
					a.y1 = my/2+my/4;
					a.draw();
					break;
				case 81: //page-down
					a.y1 = 458;
					a.draw();
					break;
				default:
					break;
				}//switch
			}//if

		for( lv=0; lv < max_box; lv++ )
			if( b[lv].status )
				{
				b[lv].py1 = b[lv].y1;
				b[lv].y1 += b[lv].speed;
				b[lv].draw();
				//s-on strike
				if ( a.check(b[lv]) )
						{
					delay(20);
					itoa(score,sco,10);

					setviewport( 0, 0,mx,20,0) ;
					//setviewport( 0, 1,99,19,0) ;
					clearviewport();

					//s-1
					//outtextxy(2,5,"Score = ");
					//outtextxy( 70, 5, sco);
					rectangle(0,0,mx,20);
					outtextxy( 100,5,",Pause = Press Any Key");
					outtextxy( 275, 5, ",Exit = Esc");
					outtextxy( 365, 5, ",Keys = Home, End, Page Up/Down");
					//e-1

					score-=100;

					outtextxy(2,5,"Score = ");
					setcolor(RED);
					outtextxy( 70, 5, sco);
				//e-on strike
					setcolor(WHITE);

					}
				  else	 if( b[lv].y1 > my )
					{    music(5);
					b[lv].x1 = random(mx);
					b[lv].px1 = b[lv].x1;
					b[lv].y1 = 21;
					b[lv].put_image();

					itoa(score,sco,10);

					setviewport( 0, 0,mx,20,0) ;
					//setviewport( 0, 1,99,19,0) ;
					clearviewport();

					//outtextxy(2,5,"Score = ");
					//outtextxy( 70, 5, sco);
					rectangle(0,0,mx,20);
					outtextxy( 100,5,",Pause = Press Any Key");
					outtextxy( 275, 5, ",Exit = Esc");
					outtextxy( 365, 5, ",Keys = Home, End, Page Up/Down");

					score+=30;

					outtextxy(2,5,"Score = ");
					if( score < 0 )
						setcolor(RED);
					outtextxy( 70, 5, sco);
					setcolor(WHITE);
					}

	//stage  2

				if( score > 800 )

					{   //if score
						cleardevice();
						stscreen();
						delay(2000);
						cleardevice();
						setbkcolor(13);
						aero_plane a( 251, 448, 261, 468, GREEN);


	const int max_box = 12;
	box b[max_box];

	for( lv=0; lv < max_box; lv++ )
		{
		isDraw = 'y';
		b[lv].x1 = random(mx-21);
		b[lv].y1 = random(my-41);
		while( b[lv].y1 < 20 || b[lv].y1 > my/3)
			b[lv].y1 = random(my);
		//ruff work start --- but now it is very imp work
		// it checks a box is not drown on a already drawn box.
		// if it is then it don't allows to draw box but give
		// him a another try to get new value and try again.
		for( v=0; v < lv; v++)
		{
		  if( b[lv].check( b[v] ) )
		  {
		     lv--;
		     isDraw = 'n';
		     break;
			  ;
		  }
		}
		//ruff work end
		if( isDraw != 'n' )
			b[lv].init( b[lv].x1, b[lv].y1, b[lv].x1+20, b[lv].y1+41, lv+1);
		b[lv].speed += 5;
		}  //end for
//*
///////////////////////////////////////////////////////////////
// start - 2nd stage
	rectangle(0,0,638,my);
	rectangle(0,0,mx,20);
	int score=0;
	do
		{
		if( kbhit() )
			{
			a.px1 =a.x1;
			a.py1 = a.y1;
			d = getch();
			d = getch();
			switch( d )
				{
				case 75: // left
					if( a.x1 > 1 )
						{
						a.x1 -= 15;
						a.draw();
						}
					break;
				case 77: // right
					if( a.x1 < 621 )
						{
						a.x1 += 15;
						a.draw();
						}
					break;
				case 72:      // up
					if( a.y1 > my/2+my/4 )
						{
						a.y1 -= 15;
						a.draw();
						}
					break;
				case 80:    //down
					if( a.y1 < my-25 )
						{
						a.y1 += 15;
						a.draw();
						}
					break;
				case 71: //home
					a.x1 = 1;
					a.draw();
					break;
				case 79: //end
					a.x1 = 621;
					a.draw();
					break;
				case 73://page-up
					a.y1 = my/2+my/4;
					a.draw();
					break;
				case 81: //page-down
					a.y1 = 458;
					a.draw();
					break;
				default:
					break;
				}//switch
			}//if

		for( lv=0; lv < max_box; lv++ )
			if( b[lv].status )
				{
				b[lv].py1 = b[lv].y1;
				b[lv].y1 += b[lv].speed;//5;
				b[lv].draw();

				if ( a.check(b[lv]) )
					{
					delay(2000);
					cleardevice();
					endscreen();
					music(3);
					delay(3000);
					closegraph();
					exit(EXIT_SUCCESS);
					//s-stage 2 score
					/*
					setviewport( 0, 0,mx,20,0) ;
					clearviewport();
					//outtextxy(2,5,"Score = ");
					//outtextxy( 70, 5, sco);
					rectangle(0,0,mx,20);
					outtextxy( 100,5,",Pause = Press Any Key");
					outtextxy( 275, 5, ",Exit = Esc");
					outtextxy( 365, 5, ",Keys = Home, End, Page Up/Down");

					score-=100;
					setviewport( 0, 0,mx,20,0);
					outtextxy(2,5,"Score = ");
					outtextxy( 70, 5, sco);
					*/
					//e-stage 2 score
					}
				else if( b[lv].y1 > my )
					{
					  music(5);
					  b[lv].x1 = random(mx);
					  b[lv].px1 = b[lv].x1;
					  b[lv].y1 = 21;
					  b[lv].put_image();

						itoa(score,sco,10);

						setviewport( 0, 0,mx,20,0);
						clearviewport();
						//s
						//outtextxy(2,5,"Score = ");
						//outtextxy( 70, 5, sco);
						rectangle(0,0,mx,20);
						outtextxy( 100,5,",Pause = Press Any Key");
						outtextxy( 275, 5, ",Exit = Esc");
						outtextxy( 365, 5, ",Keys = Home, End, Page Up/Down");
						//e

						score+=20;
						setviewport( 0, 0,mx,20,0);
						outtextxy(2,5,"Score = ");
						outtextxy( 70, 5, sco);
					}// end else if
						 delay(1);
				} //if status

		}//do loop

		 while(d!=27);
// end - 2nd stage
// */
//////////////////////////////////////////////////////////////////

					} //end if score


				 }// if

	delay(10);
		  }//do loop
			 while( d!=27 );
	closegraph();
} //endmain

aero_plane::aero_plane( int ax1, int ay1, int ax2, int ay2, int col)
	{
	x1 = ax1;
	y1 = ay1;
	x2 = ax2;
	y2 = ay2;
	color = col;

	rectangle(x1,y1,x2,y2);
	setfillstyle(SOLID_FILL, color);
	floodfill(x1+2,y1+2,WHITE);

	circle((x1+x2)/2-2, (y1+y2)/2-5, 2);
	circle((x1+x2)/2+2, (y1+y2)/2-5, 2);

	circle((x1+x2)/2-2, (y1+y2)/2+5, 2);
	circle((x1+x2)/2+2, (y1+y2)/2+5, 2);

	area = imagesize(x1,y1,x2,y2);
	buff = (char*) malloc(area);
	getimage(x1, y1, x2, y2, buff);
	}
void aero_plane::draw()
	{
	putimage(px1,py1,buff,XOR_PUT);
	putimage(x1,y1,buff,XOR_PUT);
	}
int aero_plane::check(box b)
	{
	if ( x1+10>= b.x1 && x1 <= b.x1+20 && y1+20 >= b.y1 && y1 <= b.y1+40 )

		return 1 ;
	else
		return 0;
	}

//box
void box::init( int ax1, int ay1, int ax2, int ay2, int col)
	{
	x1 = ax1;
	y1 = ay1;
	x2 = ax2;
	y2 = ay2;
	color = col;
	status = 1;
	speed = random(5);
	while( speed < 1 )
		speed = random(10);
	//speed = 10;
	px1 = x1;
	py1 = y1;

	rectangle(x1,y1,x2,y2);

	setfillstyle(SOLID_FILL, color);
	floodfill(x1+2,y1+2,WHITE);

	area = imagesize(x1,y1,x2,y2);
	buff = (char*) malloc(area);
	getimage(x1, y1, x2, y2, buff);
	}
void box::draw()
	{
	putimage(px1,py1,buff,XOR_PUT);
	putimage(x1,y1,buff,XOR_PUT);
	}
void box::put_image()
	{
	putimage(x1,y1,buff,XOR_PUT);
	}
int box::check(box b)
	{
	if ( x1+20 >= b.x1 && x1 <= b.x1+20 && y1+40 >= b.y1 && y1 <= b.y1+80 )

		return 1;
	else
		return 0;
	}



void mainscreen()
	{

      int ff[40][40] =	{                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,


							};
	int i,j,lx=0,ly=0,ch,mx,my;
	setbkcolor(05);

	rectangle(0,0,mx,my );
	for(i=0;i<40;i++)
	 {
	   for(j=0;j<40;j++)
	    {
	     if(ff[i][j])
	     {
	      setfillstyle(SOLID_FILL,YELLOW);
	      rectangle(lx,ly,lx+15,ly+9);
	      floodfill(lx+3,ly+3,WHITE);
	      }
	      lx=lx+16;
	     }
	     lx=0;
	     ly=ly+10;
	   }
      //	return 0;
	}

//start - game end screen
void endscreen()
	{

		int ff[40][40] =	{                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,
							0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,
							0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,
							0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,


							};
	int i,j,lx=0,ly=0,ch,mx,my;
	setbkcolor(05);

	rectangle(0,0,mx,my );
	for(i=0;i<40;i++)
	 {
		for(j=0;j<40;j++)
		 {
		  if(ff[i][j])
		  {
			setfillstyle(SOLID_FILL,YELLOW);
			rectangle(lx,ly,lx+15,ly+9);
			floodfill(lx+3,ly+3,WHITE);
			}
			lx=lx+16;
		  }
		  lx=0;
		  ly=ly+10;
	 }
		//	return 0;
	 outtextxy(getmaxx()/2,getmaxy()/2,"Produced by S2");
}
//end - game end screen

	void bkscreen()
	{

      int ff[40][40] =	{                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,
							1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,
							1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,
							1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,
							1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,
							1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,
							1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,
							1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,
							1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,


							};
	int i,j,lx=0,ly=0,ch,mx,my;
	setbkcolor(02);

	rectangle(0,0,mx,my );
	for(i=0;i<40;i++)
	 {
	   for(j=0;j<40;j++)
	    {
	     if(ff[i][j])
	     {
	      setfillstyle(SOLID_FILL,BLACK);
	      rectangle(lx,ly,lx+15,ly+9);
	      floodfill(lx+3,ly+3,WHITE);
	      }
	      lx=lx+16;
	     }
	     lx=0;
	     ly=ly+10;
	   }
	   }

	void    stscreen(void)
	{

		int ff[40][40] =	{                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,1,1,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
							0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
							0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,
							0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,


							};
	int i,j,lx=0,ly=0,ch,mx,my;
	setbkcolor(9);

	rectangle(0,0,mx,my );
	for(i=0;i<40;i++)
	 {
	   for(j=0;j<40;j++)
	    {
	     if(ff[i][j])
	     {
	      setfillstyle(SOLID_FILL,RED);
	      rectangle(lx,ly,lx+15,ly+9);
	      floodfill(lx+3,ly+3,WHITE);
	      }
	      lx=lx+16;
	     }
	     lx=0;
	     ly=ly+10;
	   }

	}
	  void    st1screen(void)
	{

      int ff[40][40] =	{                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,1,1,1,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
							0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
							0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,
							0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,
							0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
							0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,


							};
	int i,j,lx=0,ly=0,ch,mx,my;
	setbkcolor(9);

	rectangle(0,0,mx,my );
	for(i=0;i<40;i++)
	 {
	   for(j=0;j<40;j++)
	    {
	     if(ff[i][j])
	     {
	      setfillstyle(SOLID_FILL,RED);
	      rectangle(lx,ly,lx+15,ly+9);
	      floodfill(lx+3,ly+3,WHITE);
	      }
	      lx=lx+16;
	     }
		  lx=0;
	     ly=ly+10;
	   }
	}

     void music(int type)
	 {
	    float chimes[7] = {130.81,186.83,164.81,174.61,196.0,220.0,246.94};
	    int n ,i;
	    switch(type)
	      {
     case 1:
		for(i=0;i<7;i++)
		{
		sound(chimes[i]*8);
		delay(600);
		}
		nosound();
		break;

	  case 2:
	      for(i=0;i<15;i++)
	      {
	      n =random(7);
	      sound(chimes[n]*4);
	      delay(500);
	      }
	      nosound();
	      break;
      case 3:
	      while(!kbhit())
	      {
	      n=random(7);
	      sound(chimes[n]*4);
	      delay(100);
	      }
	      nosound();
	      if(getch==0)
	      getch();
	      break;
		 case 4:
	      for(i=4;i>0;i--)
	      {
	      sound(chimes[i]*4);
	      delay(15);
	      }
	      nosound();
	      break;
       case 5:
	      sound(chimes[6]*2);
	      delay(15);
	      nosound();


	 } // end switch


	 }      //end  main


